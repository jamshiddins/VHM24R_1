input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json_lines
  }
  
  http {
    port => 8080
    codec => json
  }
}

filter {
  # Parse application logs
  if [fields][service] == "vhm24r-backend" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{LOGLEVEL:level} - %{DATA:logger} - %{GREEDYDATA:message}" 
      }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    # Parse FastAPI access logs
    if [message] =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/ {
      grok {
        match => { 
          "message" => "%{IPORHOST:client_ip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:bytes}" 
        }
      }
    }
    
    # Enrich with service metadata
    mutate {
      add_field => { 
        "service" => "vhm24r-backend"
        "environment" => "${ENVIRONMENT:production}"
        "version" => "${APP_VERSION:1.0.0}"
      }
    }
  }
  
  # Parse Kong API Gateway logs
  if [fields][service] == "kong" {
    json {
      source => "message"
    }
    
    mutate {
      add_field => { 
        "service" => "kong-gateway"
        "component" => "api-gateway"
      }
    }
  }
  
  # Parse Telegram bot logs
  if [message] =~ /Telegram/ {
    mutate {
      add_field => { 
        "component" => "telegram-bot"
        "service" => "vhm24r-backend"
      }
    }
  }
  
  # Parse file processing logs
  if [message] =~ /FileProcessor|обработка файла/ {
    mutate {
      add_field => { 
        "component" => "file-processor"
        "service" => "vhm24r-backend"
      }
    }
  }
  
  # Parse authentication logs
  if [message] =~ /auth|Auth|аутентификация/ {
    mutate {
      add_field => { 
        "component" => "authentication"
        "service" => "vhm24r-backend"
      }
    }
  }
  
  # Parse database logs
  if [message] =~ /SQL|database|PostgreSQL/ {
    mutate {
      add_field => { 
        "component" => "database"
        "service" => "vhm24r-backend"
      }
    }
  }
  
  # Add correlation ID if present
  if [correlation_id] {
    mutate {
      add_field => { "trace_id" => "%{correlation_id}" }
    }
  }
  
  # Parse error logs
  if [level] == "ERROR" or [level] == "CRITICAL" {
    mutate {
      add_tag => [ "error", "alert" ]
    }
  }
  
  # Parse performance metrics
  if [message] =~ /performance|время выполнения|duration/ {
    grok {
      match => { 
        "message" => ".*duration[:\s]+(?<duration_ms>\d+\.?\d*).*" 
      }
    }
    
    if [duration_ms] {
      mutate {
        convert => { "duration_ms" => "float" }
        add_tag => [ "performance" ]
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "vhm24r-logs-%{+YYYY.MM.dd}"
    template_name => "vhm24r"
    template => "/usr/share/logstash/templates/vhm24r-template.json"
    template_overwrite => true
  }
  
  # Output errors to separate index
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "vhm24r-errors-%{+YYYY.MM.dd}"
    }
  }
  
  # Output performance metrics to separate index
  if "performance" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "vhm24r-performance-%{+YYYY.MM.dd}"
    }
  }
  
  # Debug output (remove in production)
  stdout { 
    codec => rubydebug 
  }
}
