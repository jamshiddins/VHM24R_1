# üßπ –ù–ï–ú–ï–î–õ–ï–ù–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ü–†–û–ï–ö–¢–ê VHM24R (PowerShell –≤–µ—Ä—Å–∏—è)
# –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ—á–∏—Å—Ç–∫–∏

Write-Host "üßπ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ VHM24R..." -ForegroundColor Green
Write-Host "==================================================" -ForegroundColor Yellow

# 1. Python –∫—ç—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
Write-Host "1Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ Python –∫—ç—à–∞..." -ForegroundColor Cyan
Get-ChildItem -Path . -Recurse -Directory -Name "__pycache__" | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue
Get-ChildItem -Path . -Recurse -File -Name "*.pyc" | Remove-Item -Force -ErrorAction SilentlyContinue
Get-ChildItem -Path . -Recurse -File -Name "*.pyo" | Remove-Item -Force -ErrorAction SilentlyContinue
Get-ChildItem -Path . -Recurse -File -Name "*.pyd" | Remove-Item -Force -ErrorAction SilentlyContinue
Get-ChildItem -Path . -Recurse -Directory -Name "*.egg-info" | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue

# 2. –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "2Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫..." -ForegroundColor Cyan
$tempDirs = @("backend/temp", "backend/logs", "backend/uploads", "backend/exports", "backend/static/uploads", "logs", "temp", "uploads")
foreach ($dir in $tempDirs) {
    if (Test-Path $dir) {
        Remove-Item -Path $dir -Recurse -Force -ErrorAction SilentlyContinue
        Write-Host "   –£–¥–∞–ª–µ–Ω–æ: $dir" -ForegroundColor Gray
    }
}

# 3. Node.js —Ñ–∞–π–ª—ã (–µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
Write-Host "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Cyan
if (!(Test-Path "frontend/package.json") -or !(Test-Path "frontend/src")) {
    Write-Host "   –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö Node.js —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Gray
    $nodeDirs = @("frontend/node_modules", "frontend/.next", "frontend/dist")
    $nodeFiles = @("frontend/package-lock.json", "frontend/yarn.lock")
    
    foreach ($dir in $nodeDirs) {
        if (Test-Path $dir) { Remove-Item -Path $dir -Recurse -Force -ErrorAction SilentlyContinue }
    }
    foreach ($file in $nodeFiles) {
        if (Test-Path $file) { Remove-Item -Path $file -Force -ErrorAction SilentlyContinue }
    }
}

# 4. IDE –∏ OS —Ñ–∞–π–ª—ã
Write-Host "4Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ IDE –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Cyan
$ideDirs = @(".vscode", ".idea")
$ideFiles = @("*.swp", "*.swo", ".DS_Store", "Thumbs.db")

foreach ($dir in $ideDirs) {
    if (Test-Path $dir) { Remove-Item -Path $dir -Recurse -Force -ErrorAction SilentlyContinue }
}
foreach ($pattern in $ideFiles) {
    Get-ChildItem -Path . -Recurse -File -Name $pattern | Remove-Item -Force -ErrorAction SilentlyContinue
}

# 5. –õ–æ–≥–∏ –∏ –∫—ç—à
Write-Host "5Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –∏ –∫—ç—à–∞..." -ForegroundColor Cyan
Get-ChildItem -Path . -Recurse -File -Name "*.log" | Remove-Item -Force -ErrorAction SilentlyContinue
$cacheDirs = @(".pytest_cache", ".coverage", ".nyc_output", "htmlcov")
foreach ($dir in $cacheDirs) {
    if (Test-Path $dir) { Remove-Item -Path $dir -Recurse -Force -ErrorAction SilentlyContinue }
}

# 6. –°–µ–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã
Write-Host "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Cyan
$envFiles = @("backend/.env", ".env", ".env.local", ".env.production")
foreach ($file in $envFiles) {
    if (Test-Path $file) {
        Write-Host "   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω $file - –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω!" -ForegroundColor Yellow
        Remove-Item -Path $file -Force -ErrorAction SilentlyContinue
    }
}

# 7. –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
Write-Host "7Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Cyan
$dbPatterns = @("*.db", "*.sqlite", "*.sqlite3")
foreach ($pattern in $dbPatterns) {
    Get-ChildItem -Path . -Recurse -File -Name $pattern | Remove-Item -Force -ErrorAction SilentlyContinue
}

# 8. Docker —Ñ–∞–π–ª—ã (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ)
Write-Host "8Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ Docker..." -ForegroundColor Cyan
if (Test-Path ".docker") { Remove-Item -Path ".docker" -Recurse -Force -ErrorAction SilentlyContinue }
Get-ChildItem -Path . -Recurse -File -Name "docker-compose.override.yml" | Remove-Item -Force -ErrorAction SilentlyContinue

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
Write-Host "9Ô∏è‚É£ –ü–æ–∏—Å–∫ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Cyan
if ((Test-Path "backend/frontend/index.html") -and (Test-Path "frontend/index.html")) {
    Write-Host "   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ frontend —Ñ–∞–π–ª–æ–≤!" -ForegroundColor Yellow
    Write-Host "   –£–¥–∞–ª–µ–Ω–∏–µ backend/frontend/ (–æ—Å—Ç–∞–≤–ª—è–µ–º frontend/)" -ForegroundColor Gray
    Remove-Item -Path "backend/frontend" -Recurse -Force -ErrorAction SilentlyContinue
}

if ((Test-Path "backend/app/telegram_auth.py") -and (Test-Path "backend/app/auth.py")) {
    Write-Host "   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ auth —Ñ–∞–π–ª–æ–≤ - —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏!" -ForegroundColor Yellow
}

# 10. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ .gitignore
Write-Host "üîü –°–æ–∑–¥–∞–Ω–∏–µ .gitignore..." -ForegroundColor Cyan
$gitignoreContent = @"
# Python
__pycache__/
*.py[cod]
*`$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Environment variables
.env
.env.local
.env.production
.env.staging

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Temporary files
temp/
tmp/
uploads/
exports/

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Coverage
.pytest_cache/
.coverage
.nyc_output
htmlcov/

# Database
*.db
*.sqlite
*.sqlite3

# Railway
.railway/

# Local development
.venv/
venv/
ENV/
env/
.env/

# Cache
.cache/
.parcel-cache/

# Docker
.docker/
docker-compose.override.yml
"@

Set-Content -Path ".gitignore" -Value $gitignoreContent -Encoding UTF8

# 11. –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
Write-Host ""
Write-Host "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ß–ò–°–¢–ö–ò:" -ForegroundColor Green
Write-Host "==============================" -ForegroundColor Yellow

$totalFiles = (Get-ChildItem -Path . -Recurse -File).Count
$pythonFiles = (Get-ChildItem -Path . -Recurse -File -Name "*.py").Count
$htmlFiles = (Get-ChildItem -Path . -Recurse -File -Name "*.html").Count
$mdFiles = (Get-ChildItem -Path . -Recurse -File -Name "*.md").Count

Write-Host "–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: $totalFiles" -ForegroundColor White
Write-Host "Python —Ñ–∞–π–ª–æ–≤: $pythonFiles" -ForegroundColor White
Write-Host "HTML —Ñ–∞–π–ª–æ–≤: $htmlFiles" -ForegroundColor White
Write-Host "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: $mdFiles" -ForegroundColor White

# 12. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-Host ""
Write-Host "üîç –ü–†–û–í–ï–†–ö–ê –ö–†–ò–¢–ò–ß–ù–´–• –§–ê–ô–õ–û–í:" -ForegroundColor Green
Write-Host "===================================" -ForegroundColor Yellow

$criticalFiles = @(
    "backend/app/main.py",
    "backend/app/models.py", 
    "backend/app/database.py",
    "backend/app/auth.py",
    "backend/requirements.txt",
    "backend/Dockerfile",
    "frontend/index.html",
    "railway.toml",
    "README.md"
)

foreach ($file in $criticalFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file - –û–¢–°–£–¢–°–¢–í–£–ï–¢!" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!" -ForegroundColor Green
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ git status" -ForegroundColor Cyan
Write-Host "üöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –∏ –¥–µ–ø–ª–æ—é" -ForegroundColor Green
